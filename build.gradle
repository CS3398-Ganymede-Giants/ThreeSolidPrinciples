/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'jabed' at '11/14/15 7:37 PM' with Gradle 2.8
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.8/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
// The Eclipse plugins generate files used by Eclipse,  making it possible to import project into Eclipse.
//apply plugin: 'eclipse'
//The Application plugin facilitates creating an executable JVM application.
apply plugin: 'application'


sourceSets {
    main {
        java { srcDir 'src' }
        resources { srcDir 'src' }
    }

    test {
        resources { srcDir 'test' }
    }
}

mainClassName = 'threesolid.ThreeSolidMain'

// tag::repositories[]
// Usually, a Java project will have some dependencies on external JAR files.  Gradle searches here for them
repositories {
    mavenCentral()
    jcenter()
}
// end::repositories[]

// tag::jar[]
//
//
//   Pick a baseName you like and assign it.
//
//
jar {
    baseName = 'dl-three-solid-main'
    version =  '0.1.0'
}
// end::jar[]

// tag::dependencies[]
sourceCompatibility = 1.8
targetCompatibility = 1.8

// joda-time provides the time stamping used in HelloWorld.java
// junit is to run the TestGreeter.java and others
dependencies {
    compile "joda-time:joda-time:2.2"
    compile "org.junit.jupiter:junit-jupiter-api:5.3.1"
 //   testCompile 'junit:junit:4.12'
    testCompile "org.junit.jupiter:junit-jupiter-api:5.3.1"

    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.3.1'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.3.1',
            'org.junit.vintage:junit-vintage-engine:5.3.1'
    )
}

test {
    // useJUnitPlatform()
}
// end::dependencies[]

task wrapper(type: Wrapper) {
	gradleVersion = '4.10.2'
}
